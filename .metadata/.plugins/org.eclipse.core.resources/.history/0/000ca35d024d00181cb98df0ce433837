package marketo;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.Iterator;


import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.JSONValue;

public class HandleJson {
	
	public HandleJson(){
		
	}
	
	public static JSONArray getLeads(File input){
		JSONArray leads = null;
		try {
			JSONObject jsonObject = (JSONObject) JSONValue.parse(new FileReader(input));
			leads = (JSONArray) jsonObject.get("leads");
		} catch (FileNotFoundException ex) {
			ex.printStackTrace();
		}
		return leads;
	}
	
	/***
	 * Take in the raw data and remove duplicates
	 * @param originalLeads
	 * @return arraylist of Lead objects
	 */
	@SuppressWarnings("unchecked")
	public static ArrayList<Lead> dedupe(JSONArray originalLeads){
		
		ArrayList<Lead> deduped = new ArrayList<Lead>();
		
		Iterator<JSONObject> iter = originalLeads.iterator();
		while(iter.hasNext()){
			//loop through  list to check for duplicates
			Lead current = new Lead(iter.next());
			deduped = compareLeads(deduped, current);
		}
		return deduped;
	}
	
	/***
	 * Loop through the current deduplicated list and replace/remove any duplicates
	 * @param deduped
	 * @param current
	 * @return arraylist of Lead objects
	 */
	public static ArrayList<Lead> compareLeads(ArrayList<Lead> deduped, Lead current){
		for(Lead lead : deduped){
			if( lead.emailAddress.equals(current.emailAddress)|| lead._id.equals(current._id)){
				//duplicate found, must compare entry dates
				if(lead.entryDate.after(current.entryDate)){
					//do not replace
				}
				else{
					//replace original duplicate with entry with later date
					deduped.remove(lead);
					deduped.add(current);
					return deduped;
				}
			}
		}
		deduped.add(current);
		return deduped;
	}
	
	/***
	 * Converts arraylist back into json array and writes to output file
	 * @param output
	 * @param leads
	 */
	@SuppressWarnings("unchecked")
	public static void writeToOutput(File output, ArrayList<Lead> leads){
		
		try {
			JSONObject parent = new JSONObject();
			JSONArray toJson = new JSONArray();
			for (Lead lead : leads) {
				toJson.add(lead.obj);
			}
			parent.put("leads", toJson);
			FileWriter writer = new FileWriter(output);
			writer.write(parent.toJSONString());
			writer.flush();
			writer.close();
		} catch (Exception ex) {
			ex.printStackTrace();
		}
	}
	
}
