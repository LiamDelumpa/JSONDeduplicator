package marketo;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.Iterator;


import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.JSONValue;

public class HandleJson {
	
	public HandleJson(){
		
	}
	
	/***
	 * Parses json object from input file
	 * @param input
	 * @return
	 */
	public static JSONObject getLeads(File input){
		JSONObject parentObject = null;
		try {
			parentObject = (JSONObject) JSONValue.parse(new FileReader(input));
		} catch (FileNotFoundException ex) {
			ex.printStackTrace();
		}
		return (JSONObject) parentObject;
	}
	
	/***
	 * Take in the raw data and remove duplicates
	 * @param originalLeads
	 * @return arraylist of Lead objects
	 */
	@SuppressWarnings("unchecked")
	public static ArrayList<Lead> dedupe(JSONArray originalLeads){
		
		ArrayList<Lead> deduped = new ArrayList<Lead>();
		
		Iterator<JSONObject> iter = originalLeads.iterator();
		while(iter.hasNext()){
			//loop through  list to check for duplicates
			Lead current = new Lead(iter.next());
			deduped = compareLeads(deduped, current);
		}
		return deduped;
	}
	
	/***
	 * Loop through the current deduplicated list and replace/remove any duplicates
	 * @param deduped
	 * @param current
	 * @return arraylist of Lead objects
	 */
	public static ArrayList<Lead> compareLeads(ArrayList<Lead> deduped, Lead current){
		for(Lead lead : deduped){
			if( lead.emailAddress.equals(current.emailAddress)|| lead._id.equals(current._id)){
				//duplicate found, must compare entry dates
				if(lead.entryDate.after(current.entryDate)){
					System.out.println("Duplicate found. Keeping duplicate due to EntryDate\n");
				}
				else{
					//replace original duplicate with entry with later date
					deduped.remove(lead);
					System.out.println("Removing duplicate object:\n" + formatObject(lead));
					deduped.add(current);
					System.out.println("Replacing with:\n" + formatObject(current));
					return deduped;
				}
			}
		}
		deduped.add(current);
		return deduped;
	}
	
	/***
	 * Converts extracts json objects from array list, constructs json string format,
	 * and outputs to file
	 * @param output
	 * @param leads
	 */
	public static void writeToOutput(File output, ArrayList<Lead> leads){
		
		try {
			
			FileWriter writer = new FileWriter(output);
			String outputStr = "{\"leads\":[\n";
			
			//loop through each lead and extract the json object for formatting
			for (Lead lead : leads) {
				outputStr += JSONValue.toJSONString(lead.obj) + ",\n";
			}	
			writer.write(outputStr += "]");
			
			writer.flush();
			writer.close();
		} catch (Exception ex) {
			ex.printStackTrace();
		}
	}
	
	/***
	 * Takes in a lead object and formats into string for logging
	 * @param lead
	 * @return
	 */
	public static String formatObject(Lead lead) {
		String formatted = "id:" + lead.obj.get("_id").toString() + ";\n "
		 + "email:" + lead.obj.get("email").toString() + ";\n "
		 + "firstName:" + lead.obj.get("firstName").toString() + ";\n "
		 + "lastName:" + lead.obj.get("lastName").toString() + ";\n "
		 + "address:" + lead.obj.get("address").toString() + ";\n "
		 + "entryDate:" + lead.obj.get("entryDate").toString() + ")\n";
		return formatted;
	}
	
}
